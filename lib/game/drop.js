import { irand } from './math';

/**
 * ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì drop items ‡∏à‡∏≤‡∏Å‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏° drop table
 * @param {Object} monster - ‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ dropTable
 * @param {Array} itemsPool - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å database
 * @returns {Array} - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏£‡∏≠‡∏õ
 */
export function calculateMonsterDrops(monster, itemsPool = []) {
  const droppedItems = [];

  if (!monster.dropTable || monster.dropTable.length === 0) {
    return droppedItems;
  }

  // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏ô drop table
  for (const dropEntry of monster.dropTable) {
    const roll = Math.random();

    // ‡∏ñ‡πâ‡∏≤ roll ‡πÑ‡∏î‡πâ‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ dropChance = ‡∏î‡∏£‡∏≠‡∏õ!
    if (roll <= dropEntry.dropChance) {
      // ‡∏Å‡∏£‡∏≠‡∏á‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ï‡∏≤‡∏° type ‡πÅ‡∏•‡∏∞ rarity
      const matchingItems = itemsPool.filter(
        item => item.type === dropEntry.itemType &&
                item.rarity === dropEntry.itemRarity
      );

      if (matchingItems.length > 0) {
        // ‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
        const selectedItem = matchingItems[irand(0, matchingItems.length - 1)];

        // ‡∏™‡∏∏‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
        const quantity = irand(dropEntry.quantity.min, dropEntry.quantity.max);

        droppedItems.push({
          ...selectedItem,
          quantity: quantity,
        });
      }
    }
  }

  return droppedItems;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á drop table ‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå
 * @param {String} monsterType - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå (normal, elite, boss, world_boss)
 * @param {Number} level - ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå
 * @returns {Array} - drop table
 */
export function generateDropTable(monsterType, level) {
  const dropTable = [];

  switch (monsterType) {
    case 'normal':
      // ‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ - ‡∏î‡∏£‡∏≠‡∏õ‡∏Ç‡∏≠‡∏á‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
      dropTable.push(
        { itemType: 'weapon', itemRarity: 'common', dropChance: 0.15, quantity: { min: 1, max: 1 } },
        { itemType: 'armor', itemRarity: 'common', dropChance: 0.15, quantity: { min: 1, max: 1 } },
        { itemType: 'charm', itemRarity: 'common', dropChance: 0.10, quantity: { min: 1, max: 1 } },
        { itemType: 'consumable', itemRarity: 'common', dropChance: 0.25, quantity: { min: 1, max: 3 } }
      );

      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏™‡∏π‡∏á ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏î‡∏£‡∏≠‡∏õ rare
      if (level >= 5) {
        dropTable.push(
          { itemType: 'weapon', itemRarity: 'rare', dropChance: 0.05, quantity: { min: 1, max: 1 } },
          { itemType: 'armor', itemRarity: 'rare', dropChance: 0.05, quantity: { min: 1, max: 1 } }
        );
      }
      break;

    case 'elite':
      // ‡∏°‡∏≠‡∏ô‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏¢‡∏≤‡∏Å - ‡∏î‡∏£‡∏≠‡∏õ‡∏Ç‡∏≠‡∏á‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
      dropTable.push(
        { itemType: 'weapon', itemRarity: 'common', dropChance: 0.20, quantity: { min: 1, max: 1 } },
        { itemType: 'armor', itemRarity: 'common', dropChance: 0.20, quantity: { min: 1, max: 1 } },
        { itemType: 'weapon', itemRarity: 'rare', dropChance: 0.15, quantity: { min: 1, max: 1 } },
        { itemType: 'armor', itemRarity: 'rare', dropChance: 0.15, quantity: { min: 1, max: 1 } },
        { itemType: 'charm', itemRarity: 'rare', dropChance: 0.12, quantity: { min: 1, max: 1 } },
        { itemType: 'consumable', itemRarity: 'rare', dropChance: 0.30, quantity: { min: 1, max: 2 } }
      );

      if (level >= 10) {
        dropTable.push(
          { itemType: 'weapon', itemRarity: 'epic', dropChance: 0.08, quantity: { min: 1, max: 1 } },
          { itemType: 'armor', itemRarity: 'epic', dropChance: 0.08, quantity: { min: 1, max: 1 } }
        );
      }
      break;

    case 'boss':
      // ‡∏ö‡∏≠‡∏™ - ‡∏î‡∏£‡∏≠‡∏õ‡∏Ç‡∏≠‡∏á‡∏î‡∏µ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
      dropTable.push(
        { itemType: 'weapon', itemRarity: 'rare', dropChance: 0.40, quantity: { min: 1, max: 1 } },
        { itemType: 'armor', itemRarity: 'rare', dropChance: 0.40, quantity: { min: 1, max: 1 } },
        { itemType: 'charm', itemRarity: 'rare', dropChance: 0.35, quantity: { min: 1, max: 1 } },
        { itemType: 'weapon', itemRarity: 'epic', dropChance: 0.25, quantity: { min: 1, max: 1 } },
        { itemType: 'armor', itemRarity: 'epic', dropChance: 0.25, quantity: { min: 1, max: 1 } },
        { itemType: 'charm', itemRarity: 'epic', dropChance: 0.20, quantity: { min: 1, max: 1 } },
        { itemType: 'consumable', itemRarity: 'epic', dropChance: 0.50, quantity: { min: 2, max: 5 } }
      );

      if (level >= 15) {
        dropTable.push(
          { itemType: 'weapon', itemRarity: 'legendary', dropChance: 0.10, quantity: { min: 1, max: 1 } },
          { itemType: 'armor', itemRarity: 'legendary', dropChance: 0.10, quantity: { min: 1, max: 1 } }
        );
      }
      break;

    case 'world_boss':
      // ‡∏ö‡∏≠‡∏™‡πÉ‡∏´‡∏ç‡πà - ‡∏î‡∏£‡∏≠‡∏õ‡∏Ç‡∏≠‡∏á‡∏´‡∏≤‡∏¢‡∏≤‡∏Å‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô
      dropTable.push(
        { itemType: 'weapon', itemRarity: 'epic', dropChance: 0.60, quantity: { min: 1, max: 2 } },
        { itemType: 'armor', itemRarity: 'epic', dropChance: 0.60, quantity: { min: 1, max: 2 } },
        { itemType: 'charm', itemRarity: 'epic', dropChance: 0.50, quantity: { min: 1, max: 2 } },
        { itemType: 'weapon', itemRarity: 'legendary', dropChance: 0.30, quantity: { min: 1, max: 1 } },
        { itemType: 'armor', itemRarity: 'legendary', dropChance: 0.30, quantity: { min: 1, max: 1 } },
        { itemType: 'charm', itemRarity: 'legendary', dropChance: 0.25, quantity: { min: 1, max: 1 } },
        { itemType: 'consumable', itemRarity: 'legendary', dropChance: 0.80, quantity: { min: 5, max: 10 } }
      );
      break;
  }

  return dropTable;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏£‡∏≠‡∏õ
 * @param {Array} items - ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏£‡∏≠‡∏õ
 * @returns {String} - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
 */
export function formatDropMessage(items) {
  if (!items || items.length === 0) {
    return '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏î‡∏£‡∏≠‡∏õ';
  }

  const messages = items.map(item => {
    const rarityEmoji = {
      common: '‚ö™',
      rare: 'üîµ',
      epic: 'üü£',
      legendary: 'üü†'
    };

    const emoji = rarityEmoji[item.rarity] || '‚ö™';
    const qtyText = item.quantity > 1 ? ` x${item.quantity}` : '';

    return `${emoji} ${item.name}${qtyText}`;
  });

  return messages.join(', ');
}

