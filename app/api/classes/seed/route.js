import { NextResponse } from 'next/server';
import { deleteData, insertDataArray } from '@/lib/mongodb';
import { CHARACTER_CLASSES } from '@/lib/game/classes';

// CHARACTER_CLASSES is serializable and can be inserted directly.
export async function POST() {
  try {
    console.log('üß≠ ‡πÄ‡∏£‡∏¥‡πà‡∏° seed ‡∏Ñ‡∏•‡∏≤‡∏™‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ (classes)...');

    const deleteResult = await deleteData('classes', {});
    console.log('üóëÔ∏è  ‡∏•‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏Å‡πà‡∏≤:', deleteResult.affectedRows || 0);

    const result = await insertDataArray('classes', CHARACTER_CLASSES);
    if (!result.status) throw new Error(result.message || 'Failed to insert classes');

    console.log(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™ ${result.affectedRows} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);

    return NextResponse.json({
      success: true,
      message: `Seed Classes ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡πÄ‡∏û‡∏¥‡πà‡∏° ${result.affectedRows} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`,
      count: result.affectedRows,
    });
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ Seed Classes:', error);
    return NextResponse.json({ success: false, error: error.message }, { status: 500 });
  }
}

export async function GET() {
  // Allow GET to trigger seeding (so client can use apiService.get)
  return await POST();
}
